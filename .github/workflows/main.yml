name: Tweet Bitcoin Mining News

on:
  schedule:
    # Run every 90 minutes (16 times per day) to respect 17 requests per 24 hours rate limit
    # Times: 00:00, 01:30, 03:00, 04:30, 06:00, 07:30, 09:00, 10:30, 12:00, 13:30, 15:00, 16:30, 18:00, 19:30, 21:00, 22:30
    - cron: '0 0,3,6,9,12,15,18,21 * * *'      # Every 3 hours starting at midnight  
    - cron: '30 1,4,7,10,13,16,19,22 * * *'    # Every 3 hours starting at 1:30 AM
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write

jobs:
  tweet:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create runtime logs directory
        run: |
          mkdir -p ${{ runner.temp }}/runtime-logs
          echo "[]" > ${{ runner.temp }}/runtime-logs/blocked.jsonl
          echo "# Runtime Logs" > ${{ runner.temp }}/runtime-logs/blocked.md
          echo "Bot execution started at: $(date)" >> ${{ runner.temp }}/runtime-logs/blocked.md
          echo "" >> ${{ runner.temp }}/runtime-logs/blocked.md

      - name: Run bot
        run: python bot.py
        env:
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          EVENTREGISTRY_API_KEY: ${{ secrets.EVENTREGISTRY_API_KEY }}

      - name: Commit changes to posted articles and reports
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git add posted_articles.json
          git add files/reports/
          git diff --quiet && git diff --staged --quiet || git commit -m "Update posted articles and analysis reports"
          git push

      - name: Finalize runtime logs
        run: |
          echo "Bot execution completed at: $(date)" >> ${{ runner.temp }}/runtime-logs/blocked.md
          # Ensure files exist even if nothing was logged
          if [ ! -s ${{ runner.temp }}/runtime-logs/blocked.jsonl ]; then
            echo "[]" > ${{ runner.temp }}/runtime-logs/blocked.jsonl
          fi
        if: always()
        
      - name: Upload runtime logs
        uses: actions/upload-artifact@v4
        with:
          name: runtime-logs
          path: ${{ runner.temp }}/runtime-logs/
          retention-days: 7
          if-no-files-found: ignore
        if: always()
